{"version":3,"file":"static/js/583.0ffe5c07.chunk.js","mappings":"sQACA,EAA6B,8CAA7B,EAAwF,8CAAxF,EAAoJ,+CAApJ,EAAsN,oDAAtN,EAAwR,+C,6BCuExR,EA/D+B,WAC7B,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACRP,GAAW,GACX,IAAMQ,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,IAAsBJ,GAF5B,OAEXK,EAFW,OAGjBZ,GAAQ,OAAIY,EAASb,OAChBa,EAASb,KAAKc,QACjBP,GAAa,GALE,gDAQjBF,EAAS,KAAMU,SARE,yBAUjBZ,GAAW,GAVM,4EAAH,qDAclBQ,GACD,GAAE,CAACH,IAEJ,IAAMQ,EAAWhB,EAAKiB,KAAI,YAA4C,IAAzCT,EAAwC,EAAxCA,GAAIU,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC7CC,EAAM,8CAA0CH,GACtD,OACE,gBAAaI,UAAWC,EAAxB,WACE,gBACEC,IAAKN,EAAeG,EAASI,EAC7BC,IAAKP,EACLQ,MAAM,MACNC,OAAO,SAET,cAAGN,UAAWC,EAAd,SAAgCJ,KAChC,eAAGG,UAAWC,EAAd,iBACK,uBAAIH,SATFZ,EAaZ,IAED,OACE,gCACGN,IACC,gBAAKoB,UAAU,mCAAf,UACE,SAAC,KAAD,CAAUO,MAAM,cAGnBzB,IAAS,yEACTE,IACC,cAAGgB,UAAWC,EAAd,mEAIF,eAAID,UAAWC,EAAf,SAAgCP,MAGrC,C,yLCpEKc,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAASO,IAAI,uBAAwB,CAC1DJ,OAAQ,CACNG,KAAAA,KAH2B,uBACvBE,EADuB,EACvBA,KADuB,kBAOxBA,GAPwB,2CAAH,sDAUjBC,EAAc,mCAAG,WAAM/B,GAAN,yFACLsB,EAASO,IAAT,iBAAuB7B,IADlB,uBACpB8B,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKd1B,EAAqB,mCAAG,WAAMJ,GAAN,yFACZsB,EAASO,IAAT,iBAAuB7B,EAAvB,aADY,uBAC3B8B,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,sDAKrBE,EAAqB,mCAAG,WAAMhC,GAAN,yFACZsB,EAASO,IAAT,iBAAuB7B,EAAvB,aADY,uBAC3B8B,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,sDAKrBG,EAAc,mCAAG,WAAMC,GAAN,yFACLZ,EAASO,IAAT,gBAA8B,CACnDJ,OAAQ,CACNS,MAAAA,KAHwB,uBACpBJ,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/pages/SingleMovieCreditsPage/single-movie-credits-page.module.css?038b","components/pages/SingleMovieCreditsPage/SingleMovieCreditsPage.jsx","components/shared/api/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast__list\":\"single-movie-credits-page_cast__list__5vMMc\",\"cast__item\":\"single-movie-credits-page_cast__item__SPCD-\",\"actor__name\":\"single-movie-credits-page_actor__name__TvnbO\",\"actor__character\":\"single-movie-credits-page_actor__character__mydph\",\"no__reviews\":\"single-movie-credits-page_no__reviews__RUBEj\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TailSpin } from 'react-loader-spinner';\n\nimport css from './single-movie-credits-page.module.css';\n\nimport { getSingleMovieCredits } from 'components/shared/api/movies';\nimport defaultActorImg from '../../../images/default-actor-img.jpg';\n\nconst SingleMovieCreditsPage = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [noResults, setNoResults] = useState(false);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchCredits = async () => {\n      try {\n        const response = await getSingleMovieCredits(id);\n        setCast([...response.cast]);\n        if (!response.cast.length) {\n          setNoResults(true);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCredits();\n  }, [id]);\n\n  const elements = cast.map(({ id, profile_path, name, character }) => {\n    const avatar = `https://image.tmdb.org/t/p/original/${profile_path}`;\n    return (\n      <li key={id} className={css.cast__item}>\n        <img\n          src={profile_path ? avatar : defaultActorImg}\n          alt={name}\n          width=\"150\"\n          height=\"225\"\n        />\n        <p className={css.actor__name}>{name}</p>\n        <p className={css.actor__character}>\n          as <b>{character}</b>\n        </p>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      {loading && (\n        <div className=\"loading__container__reviews_cast\">\n          <TailSpin color=\"#2196f3\" />\n        </div>\n      )}\n      {error && <p>Oops. Something goes wrong. Please try again.</p>}\n      {noResults && (\n        <p className={css.no__reviews}>\n          There is no information about actors for this movie.\n        </p>\n      )}\n      <ul className={css.cast__list}>{elements}</ul>\n    </>\n  );\n};\n\nexport default SingleMovieCreditsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '3c291d17985a5640676e8849c9a91fc7',\n  },\n});\n\nexport const getTrendingMovies = async page => {\n  const { data } = await instance.get('/trending/movie/week', {\n    params: {\n      page,\n    },\n  });\n\n  return data;\n};\n\nexport const getSingleMovie = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getSingleMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getSingleMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n"],"names":["useState","cast","setCast","loading","setLoading","error","setError","noResults","setNoResults","id","useParams","useEffect","fetchCredits","getSingleMovieCredits","response","length","message","elements","map","profile_path","name","character","avatar","className","css","src","defaultActorImg","alt","width","height","color","instance","axios","baseURL","params","api_key","getTrendingMovies","page","get","data","getSingleMovie","getSingleMovieReviews","getSearchMovie","query"],"sourceRoot":""}